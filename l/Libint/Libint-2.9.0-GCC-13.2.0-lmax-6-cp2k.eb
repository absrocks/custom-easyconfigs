##
# This easyconfig is based on the easy config written originally by Robert Mijakovic <robert.mijakovic@lxp.lu>
# Author:    Ben Czaja (SURF)
##
name = 'Libint'
version = '2.9.0'
local_lmax = 6
# custom configuration, to be used as dependency for CP2K
versionsuffix = '-lmax-%s-cp2k' % local_lmax

homepage = 'https://github.com/evaleev/libint'
description = """Libint library is used to evaluate the traditional (electron repulsion) and certain novel two-body
 matrix elements (integrals) over Cartesian Gaussian functions used in modern atomic and molecular theory."""

toolchain = {'name': 'GCC', 'version': '13.2.0'}
toolchainopts = {'pic': True, 'cstd': 'c++11'}

source_urls = ['https://github.com/evaleev/libint/archive']
sources = ['v%(version)s.tar.gz']
patches = [
    'Libint-2.9.0_remove-test-permute.patch',
    'Libint-2.7.2_remove-test-eri.patch',
]
checksums = [
    {'v2.9.0.tar.gz': '4929b2f2d3e53479270be052e366e8c70fa154a7f309e5c2c23b7d394159687d'},
    {'Libint-2.9.0_remove-test-permute.patch': '0d3f5ea5ff812f65e91413d750f32affc033bacd2e795bc3202ef94c907fb75b'},
    {'Libint-2.7.2_remove-test-eri.patch': '4dd7b2993b6fdebb57e5c14faa9bf46117ae42100c686ace82fe26b7cb0312ab'},
]

builddependencies = [
    ('Autotools', '20220317'),
    ('GMP', '6.3.0'),
    ('Boost', '1.83.0'),
    ('Eigen', '3.4.0'),
    ('Python', '3.11.5'),
    ('CMake', '3.27.6'),
]

# configure options as required by CP2K,
# see Jenkinsfile in https://github.com/cp2k/libint-cp2k
local_eri_max_am = '%s,%s' % (local_lmax, local_lmax - 1)
local_eri23_max_am = '%s,%s' % (local_lmax + 2, local_lmax + 1)

libint_compiler_configopts = '--enable-eri=1 --enable-eri2=1 --enable-eri3=1 --with-max-am=%s ' % local_lmax
libint_compiler_configopts += '--with-eri-max-am=%s ' % local_eri_max_am
libint_compiler_configopts += '--with-eri2-max-am=%s ' % local_eri23_max_am
libint_compiler_configopts += '--with-eri3-max-am=%s ' % local_eri23_max_am
libint_compiler_configopts += '--enable-generic-code --disable-unrolling'

with_fortran = True

moduleclass = 'chem'
